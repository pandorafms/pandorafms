#!/usr/local/bin/perl
##########################################################################
# nagios_plugin_wrapper
#
# Executes the given nagios plugin and produces an XML with data for pandora
# to be used as agent plugin. This allows to have DATA based on the errorlevel
# and use the descriptive information on description for the module
#
# Usage: nagios_plugin_wrapper <module_name> <nagios plugin execution with its parameters>
##########################################################################
# Copyright (c) 2010 Artica Soluciones Tecnologicas S.L
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; version 2.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
##########################################################################

use strict;
use warnings;
use Switch;

my $command = "";
my @opts = @ARGV;
my $module_name = shift(@opts);
my $module_type = "generic_data_string";
my $metric = shift(@opts);
my $module_status = "";
$command = join(' ', @opts);

if ($command ne ""){
    my $data = `$command`;
    my $ReturnCode = ($? >> 8) & 0xff;

    chomp $data;
    my @values = split/\|/, $data;

    my $module_description = shift(@values);
    chomp $module_description;
    $module_description = "Check ".$module_description;

    my $module_data = join(' ',@values);
    chomp $module_data;
    if ($module_data =~ m/$metric=([^;]+);/) {
       $module_type = "generic_data";
       $module_data = $1; 
       if ($metric == "time") { $module_data =~ s/s$//; }
    }
    
    # Get the errorlevel if is a Nagios plugin type (parsing the errorlevel)
    # Nagios errorlevels: 	
    #('OK'=>0,'WARNING'=>1,'CRITICAL'=>2,'UNKNOWN'=>3,'DEPENDENT'=>4);
    # By default is unknown
    $module_status = "";
    switch ($ReturnCode) {
	case 0 {$module_status = 'NORMAL';}
	case 1 {$module_status = 'WARNING';}
	case 2 {$module_status = 'CRITICAL';}
        else {$module_status = '';}
    }

    print "<module>";
    print "<name><![CDATA[".$module_name."]]></name>\n";
    print "<type><![CDATA[".$module_type."]]></type>\n";
    print "<data><![CDATA[".$module_data."]]></data>\n";
    print "<status><![CDATA[".$module_status."]]></status>\n";
    print "<description><![CDATA[" . $module_description . "]]></description>\n";
    print "</module>\n";

}

